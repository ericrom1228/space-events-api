{
	"info": {
		"_postman_id": "c79608d6-9291-4f44-b10d-939b79e19113",
		"name": "space-events-api",
		"description": "Welcome to the space events api postman collection.\n\nYou can find the API github [here.](https://github.com/ericrom1228/space-events-api)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11404137"
	},
	"item": [
		{
			"name": "Basic Stuff",
			"item": [
				{
					"name": "Root",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "About Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/about",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"about"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Events",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/events",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"event_id\", pm.response.json().id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"test event\",\n  \"description\": \"This event is a test\",\n  \"date\": \"2025-04-06T20:25:11.950Z\",\n  \"type\": \"Test type\",\n  \"location\": \"my house\",\n  \"source\": \"http://example.com\",\n  \"related_links\": [],\n  \"tags\": [],\n  \"media\": {\n    \"images\": [],\n    \"videos\": []\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/events",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Newly Created Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/events/{{event_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"events",
								"{{event_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Created Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"test event updated\",\n    \"description\": \"This event is an updated test\",\n    \"date\": \"2025-04-06T20:25:11.950000+00:00\",\n    \"type\": \"Test type\",\n    \"location\": \"my house updated\",\n    \"source\": \"http://example.com/\",\n    \"related_links\": [],\n    \"tags\": [],\n    \"media\": {\n        \"images\": [],\n        \"videos\": []\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/events/{{event_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"events",
								"{{event_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Newly Updated Event Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check Updated Title\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.title).to.eql(\"test event updated\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/events/{{event_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"events",
								"{{event_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Event",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/events/{{event_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"events",
								"{{event_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "localhost:3001",
			"type": "string"
		},
		{
			"key": "event_id",
			"value": ""
		}
	]
}